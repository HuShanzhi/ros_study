<?xml version="1.0"?>
<launch>
    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" textfile="$(find hello_leg_description)/urdf/hello_leg.urdf" />

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model rrbot -param robot_description"/>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find hello_leg_description)/config/hello_leg_control.yaml" command="load"/>

    <!-- load the controllers -->
    <node name="controller_spawner" 
          pkg="controller_manager" 
          type="spawner" 
          respawn="false"
          output="screen" 
          ns="/hello_leg" 
          args="base_to_hip_joint_position_controller 
                hip_to_upper_joint_position_controller 
                upper_to_lower_joint_position_controller
                joint_state_controller"/>
</launch>